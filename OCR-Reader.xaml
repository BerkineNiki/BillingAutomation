<Activity mc:Ignorable="sap sap2010" x:Class="ExtractOrderData" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:gacvd="clr-namespace:Google.Apis.Calendar.v3.Data;assembly=Google.Apis.Calendar.v3" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd2="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:uga="clr-namespace:UiPath.GSuite.Activities;assembly=UiPath.GSuite.Activities" xmlns:ugace="clr-namespace:UiPath.GSuite.Activities.Calendar.Enums;assembly=UiPath.GSuite.Activities" xmlns:ugacm="clr-namespace:UiPath.GSuite.Activities.Calendar.Models;assembly=UiPath.GSuite.Activities" xmlns:ugade="clr-namespace:UiPath.GSuite.Activities.Drive.Enums;assembly=UiPath.GSuite.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:usau="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.GSuite.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="inOrderData" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>ExtractOrderData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>Google.Apis.Calendar.v3.Data</x:String>
      <x:String>Google.Apis.Requests</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.GSuite.Activities.Drive.Enums</x:String>
      <x:String>UiPath.GSuite.Activities.Enums</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.GSuite.Activities.Calendar.Enums</x:String>
      <x:String>UiPath.GSuite.Calendar.Models</x:String>
      <x:String>UiPath.GSuite.Activities.Calendar.Models</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Google.Apis.Calendar.v3</AssemblyReference>
      <AssemblyReference>Google.Apis.Core</AssemblyReference>
      <AssemblyReference>Google.Apis</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ExtractOrderData" sap:VirtualizedContainerService.HintSize="1309,3311" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="filePath" />
      <Variable x:TypeArguments="x:String" Name="errDir" />
      <Variable x:TypeArguments="x:String" Name="okDir" />
      <Variable x:TypeArguments="x:String" Name="inDir" />
      <Variable x:TypeArguments="x:String" Name="baseDir" />
      <Variable x:TypeArguments="scg:List(gacvd:EventAttendee)" Name="attendees" />
      <Variable x:TypeArguments="x:String" Name="customerPhone" />
      <Variable x:TypeArguments="x:String" Name="customerEmail" />
      <Variable x:TypeArguments="x:String" Name="customerName" />
      <Variable x:TypeArguments="x:Int32" Name="defaultDuration" />
      <Variable x:TypeArguments="s:DateTime" Name="endDt" />
      <Variable x:TypeArguments="s:DateTime" Name="startDt" />
      <Variable x:TypeArguments="x:String" Name="notes" />
      <Variable x:TypeArguments="x:String" Name="title" />
      <Variable x:TypeArguments="x:String" Name="text" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="504,114" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[baseDir]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[System.IO.Path.Combine(Environment.CurrentDirectory, "OCR")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="504,114" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[inDir]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[System.IO.Path.Combine(baseDir, "InputOrders")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="504,114" sap2010:WorkflowViewState.IdRef="Assign_6">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[okDir]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[System.IO.Path.Combine(baseDir, "ProcessedOrders")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="504,114" sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[errDir]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[System.IO.Path.Combine(baseDir, "FailedOrders")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="504,115" sap2010:WorkflowViewState.IdRef="Assign_8">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[filePath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String" xml:space="preserve">[System.IO.Directory.GetFiles(inDir, "*.*", System.IO.SearchOption.TopDirectoryOnly) _
    .Where(Function(f As String) f.EndsWith(".jpg", StringComparison.OrdinalIgnoreCase) _
        OrElse f.EndsWith(".jpeg", StringComparison.OrdinalIgnoreCase) _
        OrElse f.EndsWith(".png", StringComparison.OrdinalIgnoreCase) _
        OrElse f.EndsWith(".pdf", StringComparison.OrdinalIgnoreCase)) _
    .OrderByDescending(Function(p As String) System.IO.File.GetLastWriteTime(p)) _
    .First()]</InArgument>
      </Assign.Value>
    </Assign>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="504,2717" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="Try" sap:VirtualizedContainerService.HintSize="502,2239" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap:VirtualizedContainerService.HintSize="468,2179" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="ocrLang" />
              <Variable x:TypeArguments="x:String" Name="tessPrefixUser" />
              <Variable x:TypeArguments="x:String" Name="tessPrefixMachine" />
              <Variable x:TypeArguments="x:String" Name="tessPrefixProcess" />
              <Variable x:TypeArguments="x:String" Name="tessFilePath" />
              <Variable x:TypeArguments="x:Boolean" Name="hasFin" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[tessPrefixUser]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Environment.GetEnvironmentVariable("TESSDATA_PREFIX", EnvironmentVariableTarget.User)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_10">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[tessPrefixMachine]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Environment.GetEnvironmentVariable("TESSDATA_PREFIX", EnvironmentVariableTarget.Machine)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_11">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[tessPrefixProcess]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Environment.GetEnvironmentVariable("TESSDATA_PREFIX", EnvironmentVariableTarget.Process)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_12">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[tessFilePath]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String" xml:space="preserve">[If(String.IsNullOrEmpty(tessPrefixUser),
                  "",
                  System.IO.Path.Combine(tessPrefixUser, "tessdata", "fin.traineddata"))]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_13">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[hasFin]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">[Not String.IsNullOrEmpty(tessPrefixUser) AndAlso System.IO.File.Exists(tessFilePath)]</InArgument>
              </Assign.Value>
            </Assign>
            <p:DigitizeDocument DocumentObjectModel="{x:Null}" ApplyOcrMigrated="True" ApplyOcrOnPdf="Auto" DegreeOfParallelism="-1" DetectCheckboxes="True" DisplayName="Digitize Document" DocumentPath="[filePath]" DocumentText="[text]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="434,329" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
              <p:DigitizeDocument.OCREngine>
                <ActivityFunc x:TypeArguments="sd1:Image, x:String, scg:IEnumerable(scg:KeyValuePair(sd2:Rectangle, x:String))">
                  <ActivityFunc.Argument1>
                    <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                  </ActivityFunc.Argument1>
                  <ActivityFunc.Argument2>
                    <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                  </ActivityFunc.Argument2>
                  <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,25" sap2010:WorkflowViewState.IdRef="GoogleOCR_4" Image="[Image]" Language="fin" NoopExecution="False" PredictionId="[PredictionId]" Profile="Scan" Scale="2" />
                </ActivityFunc>
              </p:DigitizeDocument.OCREngine>
            </p:DigitizeDocument>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,173" sap2010:WorkflowViewState.IdRef="LogMessage_2" Message="[&quot;OCR preview: &quot; &amp;&#xA;If(text Is Nothing, &quot;(null)&quot;,&#xA;    text.Replace(vbCr, &quot; &quot;).Replace(vbLf, &quot; &quot;).Substring(0, Math.Min(text.Length, 250)))]" />
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="var culture = new System.Globalization.CultureInfo(&quot;fi-FI&quot;);&#xA;&#xA;// 0) Siivous&#xA;string t = text ?? &quot;&quot;;&#xA;t = t.Replace('\u00A0', ' ');                 // non-breaking space -&gt; space&#xA;t = t.Replace(&quot;\r&quot;, &quot;\n&quot;);&#xA;t = System.Text.RegularExpressions.Regex.Replace(t, @&quot;\n+&quot;, &quot;\n&quot;).Trim();&#xA;&#xA;// 1) Päivämäärä (sallii 16.09.2025, 16 . 09 . 2025, 16-09-2025, 16/09/2025)&#xA;var mDate = System.Text.RegularExpressions.Regex.Match(&#xA;    t, @&quot;(?&lt;!\d)(\d{1,2}\s*[.\-/]\s*\d{1,2}\s*[.\-/]\s*\d{4})(?!\d)&quot;&#xA;);&#xA;if (!mDate.Success) throw new System.Exception(&quot;Päivämäärää ei löytynyt.&quot;);&#xA;string dateNorm = System.Text.RegularExpressions.Regex.Replace(mDate.Groups[1].Value, @&quot;\s*&quot;, &quot;&quot;);&#xA;System.DateTime dateOnly = System.DateTime.Parse(dateNorm, culture);&#xA;&#xA;// 2) Aika: sallii &quot;klo 10&quot;, &quot;klo 10:00&quot;, &quot;10.30&quot;, &quot;10-30&quot;, &quot;10&quot;&#xA;var mTime = System.Text.RegularExpressions.Regex.Match(&#xA;    t, @&quot;(?:klo\s*)?(\d{1,2})(?:(?::|\.|\-)\s*(\d{2}))?&quot;,&#xA;    System.Text.RegularExpressions.RegexOptions.IgnoreCase&#xA;);&#xA;System.DateTime sdt;&#xA;if (mTime.Success)&#xA;{&#xA;    var hh = mTime.Groups[1].Value;&#xA;    var mm = mTime.Groups[2].Success ? mTime.Groups[2].Value : &quot;00&quot;;&#xA;    sdt = System.DateTime.Parse($&quot;{dateOnly:yyyy-MM-dd} {hh}:{mm}&quot;, culture);&#xA;}&#xA;else&#xA;{&#xA;    sdt = dateOnly.AddHours(9); // oletus 09:00&#xA;}&#xA;&#xA;// kesto&#xA;int dur = defaultDuration &gt; 0 ? defaultDuration : 60;&#xA;System.DateTime edt = sdt.AddMinutes(dur);&#xA;&#xA;// 3) Tuotteet + hinnat&#xA;// Esim: &quot;Juustokakku 15 hlö 50€&quot; / &quot;Mansikkakakku 12 hlo 60 eur&quot;&#xA;var productLines = new System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;string, decimal&gt;&gt;();&#xA;foreach (var line in t.Split('\n'))&#xA;{&#xA;    var m = System.Text.RegularExpressions.Regex.Match(&#xA;        line,&#xA;        @&quot;^\s*(.+?)\s+\d+\s*h[ l]*[öo]?\s*.*?(\d+(?:[.,]\d{1,2})?)\s*(?:€|eur)?\s*$&quot;,&#xA;        System.Text.RegularExpressions.RegexOptions.IgnoreCase&#xA;    );&#xA;    if (m.Success)&#xA;    {&#xA;        string item = m.Groups[1].Value.Trim();&#xA;        string priceRaw = m.Groups[2].Value.Replace(',', '.');&#xA;        if (decimal.TryParse(priceRaw, System.Globalization.NumberStyles.Any, System.Globalization.CultureInfo.InvariantCulture, out var price))&#xA;        {&#xA;            productLines.Add(new System.Collections.Generic.KeyValuePair&lt;string, decimal&gt;(item, price));&#xA;        }&#xA;    }&#xA;}&#xA;decimal total = 0m;&#xA;foreach (var kv in productLines) total += kv.Value;&#xA;&#xA;// 4) Yhteystiedot&#xA;var mName = System.Text.RegularExpressions.Regex.Match(&#xA;    t, @&quot;^\s*([A-ZÅÄÖ][\p{L}\-']+(?:\s+[A-ZÅÄÖ][\p{L}\-']+)+)\s*$&quot;,&#xA;    System.Text.RegularExpressions.RegexOptions.Multiline&#xA;);&#xA;string name = mName.Success ? mName.Groups[1].Value.Trim() : null;&#xA;&#xA;var mEmail = System.Text.RegularExpressions.Regex.Match(&#xA;    t, @&quot;[\w\.\-+]+@[\w\.\-]+\.\w+&quot;,&#xA;    System.Text.RegularExpressions.RegexOptions.IgnoreCase&#xA;);&#xA;string email = mEmail.Success ? mEmail.Value.Trim() : null;&#xA;&#xA;var mPhone = System.Text.RegularExpressions.Regex.Match(&#xA;    t, @&quot;(?:(?:\+?358|0)\s*\d[\d\s]{5,})&quot;&#xA;);&#xA;string phone = mPhone.Success ? System.Text.RegularExpressions.Regex.Replace(mPhone.Value, @&quot;\s+&quot;, &quot;&quot;).Trim() : null;&#xA;&#xA;// 5) Otsikko + kuvaus&#xA;string titleLocal = &quot;Tilaus&quot;;&#xA;if (!string.IsNullOrWhiteSpace(name)) titleLocal += $&quot; – {name}&quot;;&#xA;&#xA;var sb = new System.Text.StringBuilder();&#xA;if (productLines.Count &gt; 0)&#xA;{&#xA;    sb.AppendLine(&quot;Tilatut tuotteet:&quot;);&#xA;    foreach (var kv in productLines)&#xA;        sb.AppendLine($&quot;• {kv.Key} – {kv.Value:0.##} €&quot;);&#xA;    sb.AppendLine($&quot;Yhteensä: {total:0.##} €&quot;);&#xA;    sb.AppendLine();&#xA;}&#xA;if (!string.IsNullOrWhiteSpace(name)) sb.AppendLine($&quot;Asiakas: {name}&quot;);&#xA;if (!string.IsNullOrWhiteSpace(email)) sb.AppendLine($&quot;Sähköposti: {email}&quot;);&#xA;if (!string.IsNullOrWhiteSpace(phone)) sb.AppendLine($&quot;Puhelin: {phone}&quot;);&#xA;sb.AppendLine();&#xA;sb.AppendLine(&quot;OCR-teksti:&quot;);&#xA;sb.AppendLine(t);&#xA;&#xA;// Palauta ulos&#xA;title = titleLocal;&#xA;notes = sb.ToString().Trim();&#xA;startDt = sdt;&#xA;endDt = edt;&#xA;customerName = name;&#xA;customerEmail = email;&#xA;customerPhone = phone;&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="434,197" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
              <ui:InvokeCode.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="text">[text]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="defaultDuration">60</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="title">[title]</OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="notes">[notes]</OutArgument>
                <OutArgument x:TypeArguments="s:DateTime" x:Key="startDt">[startDt]</OutArgument>
                <OutArgument x:TypeArguments="s:DateTime" x:Key="endDt">[endDt]</OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="customerName">[customerName]</OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="customerEmail">[customerEmail]</OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="customerPhone">[customerPhone]</OutArgument>
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,173" sap2010:WorkflowViewState.IdRef="LogMessage_3" Message="[&quot;Parsed OK → Title='&quot; &amp; title &amp;&#xA;&quot;' | Start=&quot; &amp; startDt.ToString(&quot;dd.MM.yyyy HH:mm&quot;) &amp;&#xA;&quot; | End=&quot; &amp; endDt.ToString(&quot;dd.MM.yyyy HH:mm&quot;) &amp;&#xA;&quot; | NotesLen=&quot; &amp; If(notes Is Nothing, 0, notes.Length)]" />
            <uga:GSuiteApplicationScope ApiKey="{x:Null}" BrowserItemFriendlyName="{x:Null}" BrowserItemFullPath="{x:Null}" BrowserItemId="{x:Null}" BrowserParentItemId="{x:Null}" BrowserRuntimeItemFriendlyName="{x:Null}" BrowserRuntimeItemFullPath="{x:Null}" BrowserRuntimeItemId="{x:Null}" BrowserRuntimeParentItemId="{x:Null}" BucketId="{x:Null}" BucketName="{x:Null}" ConnectionAccountName="{x:Null}" ConnectionId="{x:Null}" Connector="{x:Null}" ContinueOnError="{x:Null}" CredentialID="{x:Null}" CredentialSecret="{x:Null}" Folder="{x:Null}" KeyPath="{x:Null}" ManualRuntimeItemFullPath="{x:Null}" SecureCredentialSecret="{x:Null}" ServiceAccountEmail="{x:Null}" TimeoutMS="{x:Null}" UserEmail="{x:Null}" Account="nikolettberkinevarga@gmail.com" AuthenticationType="OAuthClientID" BucketInputMode="Browse" ConfigLocation="PropertiesPanel" DataStoreLocation="DISK" DisplayName="Google Workspace Scope" HasDomainWideAccesss="False" sap:VirtualizedContainerService.HintSize="418,653" sap2010:WorkflowViewState.IdRef="GSuiteApplicationScope_1" KeyType="JSON" OAuthClient="UIPATH" Password="notasecret" RuntimeItemInputMode="Browse" Services="Unselected" UseConnectionService="False" User="91FB0756">
              <uga:GSuiteApplicationScope.AuthenticationScopes>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
              </uga:GSuiteApplicationScope.AuthenticationScopes>
              <uga:GSuiteApplicationScope.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="GSuiteScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,428" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uga:CreateEventConnections Calendar="{x:Null}" ConnectionAccountName="{x:Null}" ConnectionId="{x:Null}" ContinueOnError="{x:Null}" Location="{x:Null}" OptionalAttendees="{x:Null}" Recurrence="{x:Null}" RequiredAttendees="{x:Null}" ResourceAttendees="{x:Null}" Result="{x:Null}" AddConferenceData="False" AllDayEvent="False" AuthScopesInvalid="False" BrowserCalendarFriendlyName="nikolettberkinevarga@gmail.com" BrowserCalendarId="nikolettberkinevarga@gmail.com" CalendarInputMode="Browse" Description="[notes]" DisplayName="Create Event" EndDateTime="[endDt]" GuestCanInviteOthers="True" GuestCanModifyEvent="False" GuestCanSeeAttendeesList="True" sap:VirtualizedContainerService.HintSize="382,368" sap2010:WorkflowViewState.IdRef="CreateEventConnections_1" PreferredReturnTimezone="Europe/Helsinki" SendNotification="ALL" ShowAs="Opaque" StartDateTime="[startDt]" Timezone="Europe/Helsinki" Title="[title]" UseConnectionService="False" Visibility="DEFAULT">
                      <uga:CreateEventConnections.CalendarArgument>
                        <ugacm:CalendarArgument Backup="{x:Reference __ReferenceID0}" ConnectionDescriptor="{x:Null}" Existing="{x:Null}" BrowserId="nikolettberkinevarga@gmail.com" ConnectionKey="eyJPQXV0aDJBcHBEYXRhIjp7IkNsaWVudElkIjoiIiwiQ2xpZW50U2VjcmV0IjoiIn0sIlNjb3BlcyI6WyJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2NhbGVuZGFyIl0sIlVzZXJJZCI6IjkxRkIwNzU2IiwiRW1haWxBZGRyZXNzIjpudWxsLCJBY2NvdW50Ijoibmlrb2xldHRiZXJraW5ldmFyZ2FAZ21haWwuY29tIiwiU3RvcmFnZSI6eyJMb2NhbEZvbGRlciI6IkdTdWl0ZSIsIk9yY2hlc3RyYXRvckZvbGRlciI6IiIsIkxvY2F0aW9uIjowfX0=" FriendlyName="nikolettberkinevarga@gmail.com" InputMode="Browse" />
                      </uga:CreateEventConnections.CalendarArgument>
                      <uga:CreateEventConnections.CalendarIdBackup>
                        <usau:BackupSlot x:TypeArguments="ugace:ECalendarMode" x:Name="__ReferenceID0" StoredValue="Browse">
                          <usau:BackupSlot.BackupValues>
                            <scg:Dictionary x:TypeArguments="ugace:ECalendarMode, scg:List(x:Object)" />
                          </usau:BackupSlot.BackupValues>
                        </usau:BackupSlot>
                      </uga:CreateEventConnections.CalendarIdBackup>
                    </uga:CreateEventConnections>
                  </Sequence>
                </ActivityAction>
              </uga:GSuiteApplicationScope.Body>
              <uga:GSuiteApplicationScope.BucketFullPathBackup>
                <usau:BackupSlot x:TypeArguments="ugade:EDriveItemMode" StoredValue="{x:Null}">
                  <usau:BackupSlot.BackupValues>
                    <scg:Dictionary x:TypeArguments="ugade:EDriveItemMode, scg:List(x:Object)" />
                  </usau:BackupSlot.BackupValues>
                </usau:BackupSlot>
              </uga:GSuiteApplicationScope.BucketFullPathBackup>
              <uga:GSuiteApplicationScope.RuntimeItemFullPathBackup>
                <usau:BackupSlot x:TypeArguments="ugade:EDriveItemMode" StoredValue="{x:Null}">
                  <usau:BackupSlot.BackupValues>
                    <scg:Dictionary x:TypeArguments="ugade:EDriveItemMode, scg:List(x:Object)" />
                  </usau:BackupSlot.BackupValues>
                </usau:BackupSlot>
              </uga:GSuiteApplicationScope.RuntimeItemFullPathBackup>
            </uga:GSuiteApplicationScope>
          </Sequence>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="486,224" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="452,164" sap2010:WorkflowViewState.IdRef="LogMessage_1" Message="[&quot;OCR-Reader ERROR: &quot; &amp; exception.Message _&#xA;&amp; If(exception.InnerException IsNot Nothing, &quot; | Inner: &quot; &amp; exception.InnerException.Message, &quot;&quot;) _&#xA;&amp; If(String.IsNullOrEmpty(text), &quot;&quot;, &quot; | OCR preview: &quot; _&#xA;    &amp; text.Replace(vbCr, &quot; &quot;).Replace(vbLf, &quot; &quot;).Substring(0, Math.Min(text.Length, 160)))]" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="486,89" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
  </Sequence>
</Activity>